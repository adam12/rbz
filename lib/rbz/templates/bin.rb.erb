#!/usr/bin/env ruby
require "tmpdir"
require "rubygems/package"
require "stringio"
require "zlib"
require "digest"
require "tmpdir"

<% if options[:compile] -%>
module ISeqMixin
  def load_iseq(path)
    if File.exist?(path + ".iseq")
      path = path + ".iseq"
      RubyVM::InstructionSequence.load_from_binary(File.binread(path))
    end
  rescue SyntaxError, RuntimeError
    nil
  end
end
<% end -%>

sha256 = Digest::SHA256.hexdigest(File.read(__FILE__))
dir = File.join(Dir.tmpdir, "rbz-#{sha256}")
Dir.mkdir(dir) unless Dir.exist?(dir)

Dir.chdir(dir) do
  sentinel = File.join(dir, ".rbz")
  if !File.exist?(sentinel)
    tar = StringIO.new(Zlib::Inflate.inflate(DATA.read.unpack1("m")))
    Gem::Package::TarReader.new(tar) do |reader|
      reader.each do |entry|
        next if entry.full_name.start_with?("._")
        next if entry.full_name.start_with?("PaxHeader")

        FileUtils.mkdir_p(File.dirname(entry.full_name))
        File.binwrite(entry.full_name, entry.read)
        File.chmod(entry.header.mode, entry.full_name)
      end
    end

    File.write(sentinel, "")
  end

  <% if options[:compile] %>
  class << RubyVM::InstructionSequence
    prepend ISeqMixin
  end
  <% end -%>

  bundle_path = File.join(dir, "bundle/load.rb")
  if File.exist?(bundle_path)
    require bundle_path
  end

  load File.expand_path("<%= options[:main] %>", dir)
end
